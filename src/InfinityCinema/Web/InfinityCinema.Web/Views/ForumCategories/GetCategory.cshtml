@model CategoryServiceModel

@inject UserManager<ApplicationUser> userManager;
@inject SignInManager<ApplicationUser> signInManager;

@{
    ViewData["Title"] = @Model.Category.Title + "- Posts";

    int maxPage = (int)Math.Ceiling((double)Model.TotalPostsForCategory / CategoryServiceModel.PostsPerPage);

    bool isUserIsRegister = this.signInManager.IsSignedIn(this.User);
    string currentUserId = string.Empty;

    if (isUserIsRegister)
    {
        ApplicationUser currentUser = await this.userManager.GetUserAsync(this.User);
        currentUserId = currentUser.Id;
    }
}

<div class="mt-4"></div>

<div class="container-fluid mt-100">
    @if (!Model.Category.Posts.Any())
    {
        <br />
        <br />
        <div class="mt-5">
            <center>
                <h2>No posts are created for this category</h2>
                <div class="row mt-4">
                    <center>
                        <a asp-area="" asp-controller="ForumCategories" asp-action="CreatePostForCategory" asp-route-CategoryId="@Model.Category.Id" class="btn btn-warning col-5">Create first post for this category</a>
                    </center>
                </div>
            </center>
        </div>
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
    }
    else
    {
        <form method="get">
            <div class="row mb-5">
                <div class="form-group offset-4 col-3">
                    <label asp-for="CategoryId" class="form-label d-none"></label>
                    <input asp-for="CategoryId" class="form-control d-none">

                    <label asp-for="PostsSorting" class="form-label d-none"></label>
                    <select asp-for="PostsSorting" class="form-control border-warning">
                        <option disabled>Order by...</option>
                        <option value="0">Ascending</option>
                        <option value="1">Descending</option>
                        <option value="2">Newest</option>
                        <option value="3">Oldest</option>
                        <option value="4">Most Popular</option>
                        <option value="5">Most Unpopular</option>
                    </select>
                </div>

                <input type="submit" class="btn btn-warning col-1" style="background-color:aliceblue;" value="Search">
            </div>
        </form>

        <div class="row">
            @foreach (var post in Model.Category.Posts)
            {
                List<CommentViewModel> comments = post.Comments.Where(c => c.ParentId == null).OrderByDescending(c => c.Id).Take(5).ToList();
                
                <div class="col-md-12">
                    <div class="card mb-4">
                        <div class="container">
                            <div class="card-header">
                                @if (currentUserId == post.User.Id || this.User.IsInRole(GlobalConstants.AdministratorRoleName))
                                {
                                    <div class="float-end">
                                        <a asp-area="" asp-controller="ForumPosts" asp-action="DeletePost" asp-route-PostId="@post.Id" asp-route-CategoryId="@Model.CategoryId" class="btn btn-danger">Delete</a>
                                    </div>
                                }
                                <div class="media flex-wrap w-100 align-items-center">
                                    <img src="https://i.imgur.com/iNmBizf.jpg" class="d-block ui-w-40 rounded-circle" alt="">
                                    <div class="media-body ml-3 mt-2">
                                        <h6>@post.User.FullName</h6>
                                        @{
                                            var pastTime = DateTime.UtcNow.Subtract(post.CreatedOn);

                                            var pastTimeToVisualizate = pastTime.Days == 1
                                            ? $"{pastTime.Days} day ago" : pastTime.Days != 0 ? $"{pastTime.Days} days ago"
                                            : pastTime.Hours == 1 ? $"{pastTime.Hours} hour ago" : pastTime.Hours != 0 ? $"{pastTime.Hours} hours ago"
                                            : pastTime.Minutes == 1 ? $"{pastTime.Minutes} minute ago" : pastTime.Minutes != 0 ? $"{pastTime.Minutes} minutes ago"
                                            : $"{pastTime.Seconds} seconds ago";
                                        }
                                        <div>@pastTimeToVisualizate</div>

                                    </div>
                                    <div class="text-muted small ml-3">
                                        <div>Member since: <time datetime="@post.User.CreatedOn.ToString("O")"></time></div>
                                        @{
                                            string text = post.User.PostsCount != 1 ? "posts" : "post";
                                        }
                                        <div><strong>@post.User.PostsCount</strong> @text</div>
                                    </div>
                                    <div class="float-end">
                                        <form id="votesForm" method="post"></form>
                                        <div class="d-flex flex-row align-items-center">
                                            <span onclick="Vote(@post.Id, true)" role="button"><i class="far fa-thumbs-up mx-2 fa-xs text-black" style="margin-top: -0.16rem;"></i></span>
                                            <p id="post-likes-@(post.Id.ToString())" class="small text-muted mb-0">@post.Likes</p>

                                            <div style="margin-left:8px"></div>
                                            <span onclick="Vote(@post.Id, false)" role="button"><i class="far fa-thumbs-down mx-2 fa-xs text-black" style="margin-top: -0.16rem;"></i></span>
                                            <p id="post-dislikes-@(post.Id.ToString())" class="small text-muted mb-0">@post.Dislikes</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <hr style="margin-left:14px; margin-right:14px;">
                            <div class="card-body">
                                <h5 class="mb-4">
                                    @post.Title
                                </h5>
                                <button class="badge badge-warning d-inline-flex align-items-center align-middle" onclick="ViewCommentsForPost(@post.Id)"><i class="fas fa-comment"></i>&nbsp;&nbsp; <span class="align-middle">Recent comments (@comments.Count)</span></button>
                            </div>
                            <div id="view-comments-@(post.Id.ToString())-btn" class="card-footer d-flex flex-wrap justify-content-between align-items-center px-0 pt-0 pb-3">
                                <div class="px-4 pt-3"> <a asp-area="" asp-controller="ForumPosts" asp-action="GetPost" asp-route-PostId="@post.Id" class="btn btn-warning"><i class="ion ion-md-create"></i>View more</a> </div>
                                <div class="px-4 pt-3"> <a asp-area="" asp-controller="ForumPosts" asp-action="GetPost" asp-route-PostId="@post.Id" asp-fragment="comments" class="btn btn-warning"><i class="ion ion-md-create"></i>Replay</a> </div>
                            </div>
                            <div id="comments-container-@(post.Id.ToString())" class="container d-none">
                                <hr>
                                <center><h5>Recent Comments</h5></center>
                                <div class="row d-flex justify-content-center">
                                    <div class="col-md-10 col-lg-9">
                                        <div style="background-color: #aliceblue;">
                                            <div class="card-body p-4">
                                                @foreach (var comment in comments)
                                                {
                                                    <div class="mb-3 bg-white border border-dark">
                                                        <div class="card-body">
                                                            <p>@Html.Raw(comment.SanitizedContent)</p>

                                                            <div class="d-flex justify-content-between">
                                                                <div class="d-flex flex-row align-items-center">
                                                                    <i class='fas fa-user-alt'></i>
                                                                    <p class="small mb-0 ms-2">@comment.User.FullName</p>
                                                                </div>
                                                                <button class="small mb-0 ms-2 btn btn-warning">Replay</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr class="offset-1 col-10">
                                <button class="badge badge-warning offset-4 col-4 mb-3" onclick="HideCommentsForPost(@post.Id)">Hide Comments</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>


        <div class="row mt-5 mb-4">
            <center>
                @if (isUserIsRegister)
                {
                    <a asp-area="" asp-controller="ForumCategories" asp-action="CreatePostForCategory" asp-route-CategoryId="@Model.Category.Id" class="btn btn-warning col-3 float-end">Create post for this category</a>
                }
                else
                {
                    <button onclick="redirectUnsignedUpUser()" class="btn btn-warning col-3 float-end">Create post for this category</button>
                    <div></div>
                    <div class="row d-none" id="redirect-user-alert">
                        <center>
                            <a asp-area="Identity" asp-controller="Account" asp-action="Register" class="btn btn-danger">To create posts first should to register!</a>
                        </center>
                    </div>
                }
            </center>
        </div>
        <hr>
        <div class="row mt-3 mb-3">
            <div class="offset-5 col-sm-1 col-md-1">
                <a asp-area="" asp-controller="ForumCategories" asp-action="GetCategory" asp-route-CategoryId="@Model.Category.Id" asp-route-CurrentPage="@(Model.CurrentPage - 1 < 1 ? 1 : Model.CurrentPage - 1)" asp-route-Sorting="@Model.PostsSorting" type="submit" class="btn btn-warning rounded-pill float-start">&lt;&lt;</a>
            </div>
            <div class="col-sm-1 col-md-1">
                <a asp-area="" asp-controller="ForumCategories" asp-action="GetCategory" asp-route-CategoryId="@Model.Category.Id" asp-route-CurrentPage="@((Model.CurrentPage + 1 > maxPage ? maxPage : Model.CurrentPage + 1))" asp-route-Sorting="@Model.PostsSorting" type="submit" class="btn btn-warning rounded-pill float-end">>></a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function redirectUnsignedUpUser() {
            let alertElement = document.querySelector('#redirect-user-alert');

            alertElement.classList.remove('d-none');
        };
    </script>

    <script>
        function ViewCommentsForPost(postId) {
            let viewCommentsButtonElement = document.querySelector('#view-comments-' + postId + '-btn');
            let commentsConatinerElement = document.querySelector('#comments-container-' + postId);

            viewCommentsButtonElement.classList.add('d-none');
            commentsConatinerElement.classList.remove('d-none');
        }

        function HideCommentsForPost(postId) {
            let viewCommentsButtonElement = document.querySelector('#view-comments-' + postId + '-btn');
            let commentsConatinerElement = document.querySelector('#comments-container-' + postId);

            viewCommentsButtonElement.classList.remove('d-none');
            commentsConatinerElement.classList.add('d-none');
        }
    </script>

    <script>
        function Vote(postId, isLikeVote) {
            // Why with POST Request do not work? - Idk
            // let token = $("#votesForm input[name=__RequestVerificationToken]").val();
            // let json = { postId: postId, isLikeVote: isLikeVote };

            //$.ajax({
            //    url: "/api/forumvotesapi",
            //    type: "POST",
            //    data: JSON.stringify(json),
            //    contentType: "application/json; charset=utf-8",
            //    dataType: "json",
            //    headers: { 'X-CSRF-TOKEN': token },
            //    success: function (data) {
            //        likesPElement.textContent = data.likes;
            //        dislikesPElement.textContent = data.dislikes;
            //    }
            //});

            $.get('/api/forumvotesapi/vote?postId=' + postId + '&isLikeVote=' + isLikeVote, (data) => {
                let likesPElement = document.querySelector('#post-likes-' + postId);
                let dislikesPElement = document.querySelector('#post-dislikes-' + postId);

                likesPElement.textContent = data.likes;
                dislikesPElement.textContent = data.dislikes;
            });
        }
    </script>


    <script src="/js//js//tinymce/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: '#mytextarea'
        });
    </script>
}